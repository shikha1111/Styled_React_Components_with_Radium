{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\ALL\\\\React_udamy\\\\Styling_React_Component_and_Elements\\\\styling--01-radium\\\\src\\\\App.js\";\n//import classes from '*.module.css';\nimport React, { Component } from 'react';\nimport './App.css';\nimport Radium from 'radium';\nimport Person from './Person/Person';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        id: 'asfa1',\n        name: 'Max',\n        age: 28\n      }, {\n        id: 'vasdf1',\n        name: 'Manu',\n        age: 29\n      }, {\n        id: 'asdf11',\n        name: 'Stephanie',\n        age: 26\n      }],\n      otherState: 'some other value',\n      showPersons: false\n    };\n\n    this.nameChangedHandler = (event, id) => {\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id === id;\n      });\n      const person = { ...this.state.persons[personIndex]\n      }; // const person = Object.assign({}, this.state.persons[personIndex]);\n\n      person.name = event.target.value;\n      const persons = [...this.state.persons];\n      persons[personIndex] = person;\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.deletePersonHandler = personIndex => {\n      // const persons = this.state.persons.slice();\n      const persons = [...this.state.persons];\n      persons.splice(personIndex, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.togglePersonsHandler = () => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n  }\n\n  render() {\n    const style = {\n      backgroundColor: 'orange',\n      color: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer',\n      ':hover': {\n        backgroundColor: 'lightgreen',\n        color: 'black'\n      }\n    };\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.persons.map((person, index) => {\n          return /*#__PURE__*/_jsxDEV(Person, {\n            click: () => this.deletePersonHandler(index),\n            name: person.name,\n            age: person.age,\n            changed: event => this.nameChangedHandler(event, person.id)\n          }, person.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this);\n      style.backgroundColor = 'black'; //style[':hover'] = {\n      //backgroundColor: 'salmon',\n      //color: 'black'\n      //};\n    } // const classes = [];\n    //if ( this.state.persons.length <= 2 ) {\n    //classes.push( 'red' ); // classes = ['red']\n    //}\n    //if ( this.state.persons.length <= 1 ) {\n    //classes.push( 'bold' ); // classes = ['red', 'bold']\n    //}\n    //classes = ['red','bold'].join('');\n\n\n    return (\n      /*#__PURE__*/\n      //<StyleRoot>\n      _jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Hi, I'm a React App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This is really working!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: style,\n          onClick: this.togglePersonsHandler,\n          children: \"Toggle Persons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), persons]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this) //</StyleRoot>\n\n    ); // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Asus/Desktop/ALL/React_udamy/Styling_React_Component_and_Elements/styling--01-radium/src/App.js"],"names":["React","Component","Radium","Person","App","state","persons","id","name","age","otherState","showPersons","nameChangedHandler","event","personIndex","findIndex","p","person","target","value","setState","deletePersonHandler","splice","togglePersonsHandler","doesShow","render","style","backgroundColor","color","font","border","padding","cursor","map","index"],"mappings":"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","sourcesContent":["//import classes from '*.module.css';\nimport React, { Component } from 'react';\nimport './App.css';\nimport Radium from 'radium';\nimport Person from './Person/Person';\n\nclass App extends Component {\n  state = {\n    persons: [\n      { id: 'asfa1', name: 'Max', age: 28 },\n      { id: 'vasdf1', name: 'Manu', age: 29 },\n      { id: 'asdf11', name: 'Stephanie', age: 26 }\n    ],\n    otherState: 'some other value',\n    showPersons: false\n  }\n\n  nameChangedHandler = ( event, id ) => {\n    const personIndex = this.state.persons.findIndex( p => {\n      return p.id === id;\n    } );\n\n    const person = {\n      ...this.state.persons[personIndex]\n    };\n\n    // const person = Object.assign({}, this.state.persons[personIndex]);\n\n    person.name = event.target.value;\n\n    const persons = [...this.state.persons];\n    persons[personIndex] = person;\n\n    this.setState( { persons: persons } );\n  }\n\n  deletePersonHandler = ( personIndex ) => {\n    // const persons = this.state.persons.slice();\n    const persons = [...this.state.persons];\n    persons.splice( personIndex, 1 );\n    this.setState( { persons: persons } );\n  }\n\n  togglePersonsHandler = () => {\n    const doesShow = this.state.showPersons;\n    this.setState( { showPersons: !doesShow } );\n  }\n\n  render () {\n    const style = {\n      backgroundColor: 'orange',\n      color: 'white',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer',\n      ':hover': {\n        backgroundColor: 'lightgreen',\n        color: 'black'\n      }\n    };\n\n    let persons = null;\n\n    if ( this.state.showPersons ) {\n      persons = (\n        <div>\n          {this.state.persons.map( ( person, index ) => {\n            return <Person\n              click={() => this.deletePersonHandler( index )}\n              name={person.name}\n              age={person.age}\n              key={person.id}\n              changed={( event ) => this.nameChangedHandler( event, person.id )} />\n          } )}\n        </div>\n      );\n\n      style.backgroundColor = 'black';\n      //style[':hover'] = {\n        //backgroundColor: 'salmon',\n        //color: 'black'\n      //};\n    }\n\n   // const classes = [];\n    //if ( this.state.persons.length <= 2 ) {\n      //classes.push( 'red' ); // classes = ['red']\n    //}\n    //if ( this.state.persons.length <= 1 ) {\n      //classes.push( 'bold' ); // classes = ['red', 'bold']\n    //}\n    //classes = ['red','bold'].join('');\n\n    return (\n      //<StyleRoot>\n        <div className=\"App\">\n          <h1>Hi, I'm a React App</h1>\n          <p>This is really working!</p>\n          <button\n            style={style}\n            onClick={this.togglePersonsHandler}>Toggle Persons</button>\n          {persons}\n        </div>\n      //</StyleRoot>\n    );\n    // return React.createElement('div', {className: 'App'}, React.createElement('h1', null, 'Does this work now?'));\n  }\n}\n\nexport default App ;\n"]},"metadata":{},"sourceType":"module"}